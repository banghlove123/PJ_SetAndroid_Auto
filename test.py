import uiautomator2 as u2
import time


class Robot:
    def __init__(self):
        self.d = u2.connect()
        print("üì≤ Connected to device")
        self.d.shell("settings put system accelerometer_rotation 0")
        self.d.shell("settings put secure system locales th_TH")
        self.d.shell("settings put system screen_brightness_mode 0")  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏ô‡∏ß‡∏ï‡∏£‡∏á
        self.d.shell("settings put system screen_brightness 255")  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á
        self.d.shell("settings put system screen_off_timeout 1800000")  # ‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠

    def wait_for_text(self, text, timeout=5):
        """‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠"""
        start_time = time.time()
        while not self.d(text=text).exists:
            if time.time() - start_time > timeout:
                print(f"‚è≥ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤: ‡πÑ‡∏°‡πà‡∏û‡∏ö '{text}'")
                return False
            time.sleep(0.5)
        print(f"‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {text}")
        return True

    def click(self, text):
        """‡∏Ñ‡∏•‡∏¥‡∏Å‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î"""
        element = self.d(text=text)
        if element.exists:
            bounds = element.info["bounds"]
            print(f"üëâ ‡∏Ñ‡∏•‡∏¥‡∏Å: {text} | ‡∏û‡∏¥‡∏Å‡∏±‡∏î: {bounds}")
            element.click()
            time.sleep(1)
            return True
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {text}")
            return False

    def open_settings_and_search(self, query):
        """‡πÄ‡∏õ‡∏¥‡∏î Settings ‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£"""
        self.d.shell("pm clear com.android.settings")
        self.d.app_start("com.android.settings")
        self.d.press("search")
        self.d.send_keys(query)
        time.sleep(1)
        print(f"üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: {query}")

    def configure_side_button(self):
        self.open_settings_and_search("‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á")
        if self.wait_for_text("‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á"):
            self.click("‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á")
            if self.wait_for_text("‡πÄ‡∏°‡∏ô‡∏π‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á"):
                self.click("‡πÄ‡∏°‡∏ô‡∏π‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á")

    def enable_unknown_sources(self):
        self.open_settings_and_search("‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å")
        if self.wait_for_text("‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©"):
            self.click("‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©")
            if self.wait_for_text("‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å"):
                self.click("‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å")
                if self.wait_for_text("SOTI MobiControl"):
                    self.click("SOTI MobiControl")

    def add_language(self):
        self.open_settings_and_search("‡∏†‡∏≤‡∏©‡∏≤")
        if self.wait_for_text("‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"):
            self.click("‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ")
            if self.wait_for_text("‡∏†‡∏≤‡∏©‡∏≤"):
                self.click("‡∏†‡∏≤‡∏©‡∏≤")
                if self.wait_for_text("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏†‡∏≤‡∏©‡∏≤"):
                    self.click("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏†‡∏≤‡∏©‡∏≤")
                    if self.wait_for_text("English"):
                        self.click("English")
                        if self.wait_for_text("United States"):
                            self.click("United States")
                            if self.wait_for_text("‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"):
                                self.click("‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")

    def configure_keyboard(self):
        self.open_settings_and_search("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô")
        if self.wait_for_text("‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"):
            self.click("‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ")
            if self.wait_for_text("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô"):
                self.click("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô")
                if self.wait_for_text("Gboard"):
                    self.click("Gboard")
                    if self.wait_for_text("‡∏Ñ‡πà‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î"):
                        self.click("‡∏Ñ‡πà‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î")
                        if self.wait_for_text("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå"):
                            self.click("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå")
                            if self.wait_for_text("‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å"):
                                self.click("‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å")
                                self.d.press("back")
                                if self.wait_for_text("‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô"):
                                    self.click("‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô")
                                    if self.wait_for_text("‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏¥‡πâ‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå"):
                                        self.click("‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ô‡∏¥‡πâ‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå")

    def optimize_gotsync(self):
        self.open_settings_and_search("GOTSync1")
        if self.wait_for_text("GOTSync"):
            self.click("GOTSync")
            if self.wait_for_text("‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà"):
                self.click("‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà")
                if self.wait_for_text("‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î"):
                    self.click("‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î")

    def security(self):
        self.d.shell("adb shell")
        self.d.shell("locksettings set-pin 123456")  # ‡∏•‡πá‡∏≠‡∏Ñ
        self.d.shell("am start -a android.settings.WIFI_SETTINGS")  # ‡∏´‡∏ô‡πâ‡∏≤ wifi
        self.d.shell("settings put system accelerometer_rotation 1")


if __name__ == "__main__":

    automation = Robot()
    automation.configure_side_button()
    automation.enable_unknown_sources()
    automation.add_language()
    automation.configure_keyboard()
    automation.optimize_gotsync()
    automation.security()
